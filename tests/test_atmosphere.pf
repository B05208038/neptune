module test_atmosphere
    use funit
    use atmosphere,    only: Atmosphere_class, MSIS2000, NRLMSISv2
    
    implicit none

    contains

    @test
    subroutine test_getDensityMSIS2000()
        ! Tests that a density is computed by the MSIS2000 model
        ! input:
        !    MJD:       51544 ! Jan 1. 2000
        !    Altitude:  500 km
        !    Latitude:  0.0 ! rad
        !    Longitude: 0.0 ! rad

        type(Atmosphere_class) :: atmosphere_model

        atmosphere_model = Atmosphere_class()

        atmosphere_model%nmodel = MSIS2000
        call atmosphere_model%initAtmosphere('../../work/data')

        ! @assertRelativelyEqual(atmosphere_model%getDensityMSIS2000(500.d0, 0.d0, 0.d0, 51544.d0), 0.5712d-003, tolerance=0.01)
        @assertRelativelyEqual(atmosphere_model%getDensityMSIS2000(500.d0, 0.d0, 0.d0, 51544.d0), 0.79964653605310576d-003, tolerance=0.01)

   end subroutine test_getDensityMSIS2000

   @test
   subroutine test_getDensityNRLMSISv2()
        ! Tests that a density is computed by the NRLMSIS2.0 model
        ! inputs taken from the msis2.0_test_in file
    
        type(Atmosphere_class) :: atmosphere_model

        atmosphere_model = Atmosphere_class()

        atmosphere_model%nmodel = NRLMSISv2
        call atmosphere_model%initAtmosphere('../../work/data')

        ! test #1
        @assertRelativelyEqual(atmosphere_model%getDensityNRLMSISv2(500.d0, 0.65d1, 96.d0, 0.5276739668d5), 0.10168617826293667d-002, tolerance=0.01)
        ! test #2
        @assertRelativelyEqual(atmosphere_model%getDensityNRLMSISv2(0.4688d3, -0.195d2, 0.446d2, 0.4389981823d5), 0.20788356929965501d-002, tolerance=0.01)

    end subroutine test_getDensityNRLMSISv2

end module test_atmosphere